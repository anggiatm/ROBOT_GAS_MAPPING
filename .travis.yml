Toggle navigation
Search docs
What is PlatformIO?
GETTING STARTED

PlatformIO IDE
PlatformIO Core (CLI)
PlatformIO Home
Tutorials and Examples
CONFIGURATION

platformio.ini
Environment variables
Advanced Scripting
INSTRUMENTS

Library Management
Platforms
Frameworks
Boards
Custom Platform & Board
PROFESSIONAL

Debugging
Unit Testing
Static Code Analysis
Remote Development
PlatformIO Account
INTEGRATION

Cloud & Desktop IDE
Continuous Integration
AppVeyor
CircleCI
Drone
GitHub Actions
GitLab
Jenkins
Shippable
Travis CI
Integration
Using cmd_run command
Using cmd_ci command
Library dependencies
Custom Build Flags
Advanced configuration
Unit Testing
Examples
Compilation database compile_commands.json
MISCELLANEOUS

Articles about us
FAQ
Release Notes
Migrating from 4.x to 5.0

 
PlatformIO
  Unit Testing with PlatformIO: Part 2. Running tests on an embedded target
 » Continuous Integration » Travis CI
Travis CI
../../_images/ci-travis-logo.png
Travis CI officially supports PlatformIO for Embedded Builds.

Travis CI is an open-source hosted, distributed continuous integration service used to build and test projects hosted at GitHub.

Travis CI is configured by adding a file named .travis.yml, which is a YAML format text file, to the root directory of the GitHub repository.

Travis CI automatically detects when a commit has been made and pushed to a repository that is using Travis CI, and each time this happens, it will try to build the project using pio ci command. This includes commits to all branches, not just to the master branch. Travis CI will also build and run pull requests. When that process has completed, it will notify a developer in the way it has been configured to do so — for example, by sending an email containing the build results (showing success or failure), or by posting a message on an IRC channel. It can be configured to build project on a range of different Development Platforms.

Contents

Travis CI

Integration

Using pio run command

Using pio ci command

Library dependencies

Install dependent library using Library Management

Manually download dependent library and include in build process via --lib option

Custom Build Flags

Advanced configuration

Unit Testing

Examples

Integration
Please make sure to read Travis CI Getting Started and general build configuration guides first.

Note

If you are going to use PlatformIO Unit Testing or Remote Development you will need to define PLATFORMIO_AUTH_TOKEN environment variable in project settings. See Defining Variables in Repository Settings guide.

PlatformIO is written in Python and is recommended to be run within Travis CI Python isolated environment. There are two possible ways of running PlatformIO in CI services:

Using pio run command
This variant is default choice for native PlatformIO projects:

language: python
python:
    - "3.7"

# Cache PlatformIO packages using Travis CI container-based infrastructure
sudo: false
cache:
    directories:
        - "~/.platformio"
        - $HOME/.cache/pip

install:
    - pip install -U platformio
    - pio update

script:
    - pio run -e <ID_1> -e <ID_2> -e <ID_N>
